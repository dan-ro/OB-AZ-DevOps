{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customerName": {
            "type": "string",
            "metadata": {
                "description": "Specify the customer name. It will be used for tagging and to create the instancename"
            }
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "prod",
                "test",
                "reports"
            ],
            "defaultValue": "test",
            "metadata": {
                "description": "It will be used to create the instancename"
            }
        },
        "AppBkupVolumeSize": {
            "type": "int",
            "defaultValue": 60,
            "metadata": {
                "description": "Specify the size of the disk for application backup (in GB)"
            }
        },
        "AppDataVolumeSize": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Specify the size of the disk for application data (in GB)"
            }
        },
        "DBBkupVolumeSize": {
            "type": "int",
            "defaultValue": 40,
            "metadata": {
                "description": "Specify the size of the disk for database backup (in GB)"
            }
        },    
        "DBBkupVolumeSku": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],            
            "metadata": {
                "description": "Specify the type of disk to be used"
            }            
        },
        "DBDataVolumeSize": {
            "type": "int",
            "defaultValue": 40,
            "metadata": {
                "description": "Specify the size of the disk for database data (in GB)"
            }
                    },
        "DBDataVolumeSku": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],            
            "metadata": {
                "description": "Specify the type of disk to be used"
            }
        },
        "LogsVolumeSize": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Specify the size of the disk for the logs volume (in GB)"
            }
        },
        "OBVolumeSize": {
            "type": "int",
            "defaultValue": 40,
            "metadata": {
                "description": "Specify the size of the disk for the OpenBravo (in GB)"
            }
        },
        "RootVolumeSize": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Specify the size of the disk for the root disk (in GB)"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The VM Instance you want to deploy"
            }
        }
    },
    "variables": {
        "virtualMachineName": "[concat(parameters('customerName'),'-',parameters('Environment'))]",
        "adminUsername": "ubuntu",
        "adminPublicKey": "ADD SSH CERT",
        "storageAccountName": "[toLower(concat(replace(parameters('customerName'),'-', '') ,parameters('Environment'), 'stor'))]",
        "storageAccountType": "Standard_GRS",
        "apiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]",
        "baseImage": "/subscriptions/1955897a-4483-403a-9a17-04ed39a5a65f/resourceGroups/RGI_InstanceImages/providers/Microsoft.Compute/galleries/OBGallery/images/OB_generic_image_server_ubuntu1804LTS",
        "vnetID": "[resourceId('RGI_Network', 'Microsoft.Network/virtualNetworks', concat('Network_', resourceGroup().location))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', 'default')]",
        "networkSecurityGroupName": "[concat(variables('virtualMachineName'), '_NSG')]",
        "diagStorageAccountName": "[concat('obdiag', resourceGroup().location)]",
        "networkInterfaceName": "[concat(variables('virtualMachineName'), '_NIC')]",
        "publicIpAddressName": "[concat(variables('virtualMachineName'), '_EIP')]",
        "publicIpAddressSku": "Standard",
        "osDiskType": "StandardSSD_LRS",
        "customData": "#cloud-config\ndebug: True\ndisable_root: false\nfs_setup:\n    - device: ephemeral0.1\n      filesystem: swap\nmounts:\n    - ['ephemeral0.1', 'none', 'swap', 'sw', '0', '0']",
        "networkSecurityGroupRules": [
            { 
                "name": "Allow_SSH",
                "properties": {
                    "protocol": "TCP",
                    "sourcePortRange": "*",
                    "destinationPortRange": "22",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 1000,
                    "direction": "Inbound",
                    "destinationAddressPrefixes": []
                }
            },
            {
                "name": "Allow_HTTP",
                "properties": {
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "80",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 1001,
                    "direction": "Inbound",
                    "destinationAddressPrefixes": []
                }
            },
            {
                "name": "Allow_HTTPS",
                "properties": {
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "443",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 1002,
                    "direction": "Inbound",
                    "destinationAddressPrefixes": []
                }
            }
        ]
    },
    "resources": [
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('networkSecurityGroupRules')]"
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[variables('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-OBVolume')]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-AppBkupVolume')]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-AppDataVolume')]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-DBBkupVolume')]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-DBDataVolume')]",
                "[concat('Microsoft.Compute/disks/', variables('virtualMachineName'),'-LogsVolume')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[variables('baseImage')]"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "diskSizeGB": "[parameters('RootVolumeSize')]",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-AppBkupVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-AppBkupVolume'))]"
                            }
                        },
                        {
                            "lun": 1,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-AppDataVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-AppDataVolume'))]"
                            }
                        },
                        {
                            "lun": 2,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-DBDataVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-DBDataVolume'))]"
                            }
                        },
                        {
                            "lun": 3,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-LogsVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-LogsVolume'))]"
                            }
                        },
                        {
                            "lun": 4,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-DBBkupVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-DBBkupVolume'))]"
                            }
                        },
                        {
                            "lun": 5,
                            "createOption": "Attach",
                            "caching": "ReadOnly",
                            "writeAcceleratorEnabled": false,
                            "name": "[concat(variables('virtualMachineName'),'-OBVolume')]",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks/', concat(variables('virtualMachineName'),'-OBVolume'))]"
                            }
                        }
                    ]                    
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[variables('adminPublicKey')]"
                                }
                            ]
                        }
                    },
                    "customData": "[base64(variables('customData'))]"
                },
                "diagnosticsProfile":{
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagStorageAccountName'), '.blob.core.windows.net')]"
                    }
                }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-OBVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "StandardSSD_LRS"
            },
            "properties": {
                "diskSizeGB": "[parameters('OBVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-AppBkupVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "StandardSSD_LRS"
            },
            "properties": {
                "diskSizeGB": "[parameters('AppBkupVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-AppDataVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "StandardSSD_LRS"
            },
            "properties": {
                "diskSizeGB": "[parameters('AppDataVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-DBBkupVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('DBBkupVolumeSku')]"
            },
            "properties": {
                "diskSizeGB": "[parameters('DBBkupVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-DBDataVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('DBDataVolumeSku')]"
            },
            "properties": {
                "diskSizeGB": "[parameters('DBDataVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "name": "[concat(variables('virtualMachineName'),'-LogsVolume')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "StandardSSD_LRS"
            },
            "properties": {
                "diskSizeGB": "[parameters('LogsVolumeSize')]",
                "creationData": {
                    "createOption": "Empty"
                    }
            },
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "sku": {
              "name": "[variables('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "default/barman",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "properties": {
                        "publicAccess": "None"
                    },
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ]
                },
                {
                    "name": "default/obbackup",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "properties": {
                        "publicAccess": "None"
                    },
                    "dependsOn": [
                        "[variables('storageAccountName')]"
                    ]
                }
            ],
            "tags": {
                "Customer": "[parameters('customerName')]",
                "Environment": "[parameters('Environment')]"
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "nestedTemplate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "RGI_Network",
            "properties":{
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat('az.cloud.openbravo.com/', variables('virtualMachineName'))]",
                            "type": "Microsoft.Network/dnsZones/A",
                            "dependsOn": [],
                            "apiVersion": "2018-05-01",
                            "location": "global",
                            "properties": {
                                "TTL": 3600,
                                "ARecords": [
                                    {
                                    "ipv4Address": "[reference(variables('publicIpAddressName')).ipAddress]"
                                    }
                                ]
                            },
                            "tags": {
                                "Customer": "[parameters('customerName')]",
                                "Environment": "[parameters('Environment')]"
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[variables('adminUsername')]"
        },
        "publicIPAddress": {
            "type": "string",
            "value": "[reference(variables('publicIpAddressName')).ipAddress]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "storageAccountKey": {
            "type": "string",
            "value": "[listKeys(variables('storageAccountName'), variables('apiVersion')).keys[0].value]"
        }
    }
}
